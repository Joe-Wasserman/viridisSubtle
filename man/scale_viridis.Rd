% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-viridis.R, R/scales.R
\name{scale_colour_viridis_d}
\alias{scale_colour_viridis_d}
\alias{scale_fill_viridis_d}
\alias{scale_colour_viridis_b}
\alias{scale_fill_viridis_b}
\alias{scale_color_viridis}
\alias{scale_colour_viridis}
\alias{scale_fill_viridis}
\title{Viridis colour scales from viridisLite}
\usage{
scale_colour_viridis_d(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  option = "D",
  aesthetics = "colour"
)

scale_fill_viridis_d(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  option = "D",
  aesthetics = "fill"
)

scale_colour_viridis_b(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  option = "D",
  values = NULL,
  space = "Lab",
  na.value = "grey50",
  guide = "coloursteps",
  aesthetics = "colour"
)

scale_fill_viridis_b(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  option = "D",
  values = NULL,
  space = "Lab",
  na.value = "grey50",
  guide = "coloursteps",
  aesthetics = "fill"
)

scale_color_viridis(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  discrete = FALSE,
  option = "D"
)

scale_colour_viridis(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  discrete = FALSE,
  option = "D"
)

scale_fill_viridis(
  ...,
  alpha = 1,
  begin = 0,
  end = 1,
  subtle = FALSE,
  direction = 1,
  discrete = FALSE,
  option = "D"
)
}
\arguments{
\item{...}{parameters to \code{discrete_scale} or \code{scale_fill_gradientn}}

\item{alpha}{pass through parameter to \code{viridis}}

\item{begin}{The (corrected) hue in [0,1] at which the viridis colormap begins.}

\item{end}{The (corrected) hue in [0,1] at which the viridis colormap ends.}

\item{subtle}{Sets the method for determining the colors to be in the palette 
when n \eqn{\lt 6}. If FALSE, the default, the range of the viridis colormap set 
by begin and end is used. If TRUE and n \eqn{\lt 6}, decreases end depending on 
the value of n.}

\item{direction}{Sets the order of colors in the scale. If 1, the default, colors
are as output by \link[viridis]{viridis_pal}. If -1, the order of colors is reversed.}

\item{option}{A character string indicating the colormap option to use. Four
options are available: "magma" (or "A"), "inferno" (or "B"), "plasma" (or "C"),
"viridis" (or "D", the default option) and "cividis" (or "E").}

\item{aesthetics}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be useful, for
example, to apply colour settings to the `colour` and `fill` aesthetics at the
same time, via `aesthetics = c("colour", "fill")`.}

\item{values}{if colours should not be evenly positioned along the gradient
this vector gives the position (between 0 and 1) for each colour in the
\code{colours} vector. See \code{\link[scales:rescale]{rescale()}} for a convenience function
to map an arbitrary range to between 0 and 1.}

\item{space}{colour space in which to calculate gradient. Must be "Lab" -
other values are deprecated.}

\item{discrete}{generate a discrete palette? (default: \code{FALSE} - generate continuous palette)}
}
\description{
The `viridis` scales provide colour maps that are perceptually uniform in both
colour and black-and-white. They are also designed to be perceived by viewers
with common forms of colour blindness. See also
<https://bids.github.io/colormap/>.

Uses the viridis color scale.
}
\details{
For \code{discrete == FALSE} (the default) all other arguments are as to
\link[ggplot2]{scale_fill_gradientn} or \link[ggplot2]{scale_color_gradientn}.
Otherwise the function will return a \code{discrete_scale} with the plot-computed
number of colors.

See \link[viridisLite]{viridis} for more information on the color scale.
}
\examples{
# viridis is the default colour/fill scale for ordered factors
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
ggplot(dsamp, aes(carat, price)) +
  geom_point(aes(colour = clarity))

# Use viridis_d with discrete data
txsamp <- subset(txhousing, city \%in\%
  c("Houston", "Fort Worth", "San Antonio", "Dallas", "Austin"))
(d <- ggplot(data = txsamp, aes(x = sales, y = median)) +
   geom_point(aes(colour = city)))
d + scale_colour_viridis_d()

# Change scale label
d + scale_colour_viridis_d("City\nCenter")

# Select palette to use, see ?scales::viridis_pal for more details
d + scale_colour_viridis_d(option = "plasma")
d + scale_colour_viridis_d(option = "inferno")

# scale_fill_viridis_d works just the same as
# scale_colour_viridis_d but for fill colours
p <- ggplot(txsamp, aes(x = median, fill = city)) +
  geom_histogram(position = "dodge", binwidth = 15000)
p + scale_fill_viridis_d()
# the order of colour can be reversed
p + scale_fill_viridis_d(direction = -1)

# Use viridis_c with continous data
(v <- ggplot(faithfuld) +
  geom_tile(aes(waiting, eruptions, fill = density)))
v + scale_fill_viridis_c()
v + scale_fill_viridis_c(option = "plasma")

# Use viridis_b to bin continuous data before mapping
v + scale_fill_viridis_b()

library(ggplot2)

# ripped from the pages of ggplot2
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point(size=4, aes(colour = factor(cyl))) +
    scale_color_viridis(discrete=TRUE) +
    theme_bw()

# ripped from the pages of ggplot2
dsub <- subset(diamonds, x > 5 & x < 6 & y > 5 & y < 6)
dsub$diff <- with(dsub, sqrt(abs(x-y))* sign(x-y))
d <- ggplot(dsub, aes(x, y, colour=diff)) + geom_point()
d + scale_color_viridis() + theme_bw()


# from the main viridis example
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))

ggplot(dat, aes(x = x, y = y)) +
  geom_hex() + coord_fixed() +
  scale_fill_viridis() + theme_bw()

library(ggplot2)
library(MASS)
library(gridExtra)

data("geyser", package="MASS")

ggplot(geyser, aes(x = duration, y = waiting)) +
  xlim(0.5, 6) + ylim(40, 110) +
  stat_density2d(aes(fill = ..level..), geom="polygon") +
  theme_bw() +
  theme(panel.grid=element_blank()) -> gg

grid.arrange(
  gg + scale_fill_viridis(option="A") + labs(x="Virdis A", y=NULL),
  gg + scale_fill_viridis(option="B") + labs(x="Virdis B", y=NULL),
  gg + scale_fill_viridis(option="C") + labs(x="Virdis C", y=NULL),
  gg + scale_fill_viridis(option="D") + labs(x="Virdis D", y=NULL),
  gg + scale_fill_viridis(option="E") + labs(x="Virdis E", y=NULL),
  ncol=3, nrow=2
)

}
\author{
Noam Ross \email{noam.ross@gmail.com} / \href{https://twitter.com/noamross}{@noamross} (continuous version),
        Bob Rudis \email{bob@rud.is} / \href{https://twitter.com/hrbrmstr}{@hrbrmstr} (combined version),
        Joe Wasserman \email{joe.wasserman@gmail.com} / \href{https://twitter.com/joewasserman}{@joewasserman} / \href{https://www.joewasserman.com}{joewasserman.com} (subtle version)
}
\concept{colour scales}
